Problem Description
Given an integer A. Return minimum count of numbers, sum of whose squares is equal to A.



Problem Constraints
1 <= A <= 105



Input Format
First and only argument is an integer A.



Output Format
Return an integer denoting the minimum count.



Example Input
Input 1:

 A = 6
Input 2:

 A = 5


Example Output
Output 1:

 3
Output 2:

 2


Example Explanation
Explanation 1:

 Possible combinations are : (12 + 12 + 12 + 12 + 12 + 12) and (12 + 12 + 22).
 Minimum count of numbers, sum of whose squares is 6 is 3. 
Explanation 2:

 We can represent 5 using only 2 numbers i.e. 12 + 22 = 5


public class Solution {
    int x;
    int[] dp;
    public int countMinSquares(int A) {
        x = (int)Math.sqrt(A);
        dp = new int[A+1];
        for(int i=0;i<=A;i++)
        {
            dp[i] = -1;
        }
        dp[0] = 0;

        return count(A);

    }

    public int count(int A)
    {
        if(A < 0)
        {
            return Integer.MAX_VALUE-1;
        }

        if(dp[A] != -1)
        {
            return dp[A];
        }

        if(A ==1)
        {
            dp[A] = 1;
            return dp[A];
        }
        if(A == 2)
        {
            dp[A] = 2;
            return dp[A];
        }

        int min = Integer.MAX_VALUE;

        for(int i=1;i<=x;i++)
        {
            min = Math.min(min, 1 + count(A - (i*i)));
        }

        if(min != Integer.MAX_VALUE)
        {
            dp[A] = min;
        }
        else
        {
            dp[A] = 0;
        }
        

        return dp[A];
    }
}
