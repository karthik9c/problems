Longest Common Subsequence
Problem Description

Given two strings A and B. Find the longest common subsequence ( A sequence which does not need to be contiguous), which is common in both the strings.

You need to return the length of such longest common subsequence.



Problem Constraints
1 <= Length of A, B <= 1005



Input Format
First argument is a string A.
Second argument is a string B.



Output Format
Return an integer denoting the length of the longest common subsequence.



Example Input
Input 1:

 A = "abbcdgf"
 B = "bbadcgf"
Input 2:

 A = "aaaaaa"
 B = "ababab"


Example Output
Output 1:

 5
Output 2:

 3


Example Explanation
Explanation 1:

 The longest common subsequence is "bbcgf", which has a length of 5.
Explanation 2:

 The longest common subsequence is "aaa", which has a length of 3.
 
 using System.Text;

class Solution {
    StringBuilder sb1;
    StringBuilder sb2;
    int[,] s;
    public int solve(string A, string B) {
        sb1 = new StringBuilder(A);
        sb2 = new StringBuilder(B);
        s = new int[sb1.Length, sb2.Length];
        
        for(int i=0;i< sb1.Length;i++)
        {
            for(int j=0;j<sb2.Length;j++)
            {
                s[i,j] = -1;
            }
        }
        
        return len(sb1.Length-1, sb2.Length-1);
    }
    
    public int len(int l1, int l2)
    {
        if(l1< 0 || l2<0)
        {
            return 0;
        }
        
        if(s[l1, l2] != -1)
        {
            return s[l1, l2];
        }
        if(sb1[l1] == sb2[l2])
        {
            s[l1, l2] = 1 + len(l1-1, l2-1);
            return s[l1, l2];
        }
        else
        {
            s[l1, l2] = Math.Max(len(l1-1, l2), len(l1, l2-1));
            return s[l1, l2];
        }
    }
}
