Problem Description
Given a vector A of non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.



Problem Constraints
1 <= |A| <= 100000



Input Format
First and only argument is the vector A



Output Format
Return one integer, the answer to the question



Example Input
Input 1:

A = [0, 1, 0, 2]
Input 2:

A = [1, 2]


Example Output
Output 1:

1
Output 2:

0


Example Explanation
Explanation 1:

1 unit is trapped on top of the 3rd element.
Explanation 2:

No water is trapped.

public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int trap(final int[] A) {
        int len = A.length;
        int[] l = new int[A.length];
        int[] r = new int[A.length];
        int max = A[0];

        for(int i=1;i<len;i++)
        {
            l[i] = max;
            max = Math.max(max, A[i]);
        }

        max = A[len-1];
        for(int i=len-2;i>=0;i--)
        {
            r[i] = max;
            max = Math.max(max, A[i]);
        }

        int sum =0;

        for(int i=0;i<len;i++)
        {
            if(l[i]>A[i] && r[i]>A[i])
            {
                int x = Math.min(l[i], r[i]);
                sum += x - A[i];
            }
        }

        return sum;
    }
}
