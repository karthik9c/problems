Product of 3
Problem Description

Given an integer array A of size N.

You have to find the product of the 3 largest integers in array A from range 1 to i, where i goes from 1 to N.

Return an array B where B[i] is the product of the largest 3 integers in range 1 to i in array A. If i < 3, then the integer at index i is -1.



Problem Constraints
1 <= N <= 105
0 <= A[i] <= 103



Input Format
First and only argument is an integer array A.



Output Format
Return an integer array B. B[i] denotes the product of the largest 3 integers in range 1 to i in array A.



Example Input
Input 1:

 A = [1, 2, 3, 4, 5]
Input 2:

 A = [10, 2, 13, 4]


Example Output
Output 1:

 [-1, -1, 6, 24, 60]
Output 2:

 [-1, -1, 260, 520]


Example Explanation
Explanation 1:

 For i = 1, ans = -1
 For i = 2, ans = -1
 For i = 3, ans = 1 * 2 * 3 = 6
 For i = 4, ans = 2 * 3 * 4 = 24
 For i = 5, ans = 3 * 4 * 5 = 60

 So, the output is [-1, -1, 6, 24, 60].
 
Explanation 2:

 For i = 1, ans = -1
 For i = 2, ans = -1
 For i = 3, ans = 10 * 2 * 13 = 260
 For i = 4, ans = 10 * 13 * 4 = 520

 So, the output is [-1, -1, 260, 520].
 
 class Solution {
    public List<int> solve(List<int> A)
    {
        var l = new List<int>();
        var r = new List<int>();

        for (int i = 0; i < A.Count(); i++)
        {
            int initialCount = 0;
            l.Add(A[i]);
            int current = i;


            while ((current > 0) && (l[(current - 1) / 2] < l[current]))
            {
                int temp = l[(current - 1) / 2];
                l[(current - 1) / 2] = l[current];
                l[current] = temp;
                current = (current - 1) / 2;
            }

            //Console.WriteLine("---");
            // for (int j = 0; j < l.Count(); j++)
            // {

            //     //Console.WriteLine(l[j]);

            // }
            //Console.WriteLine("---");

            if (i < 2)
            {
                r.Add(-1);
            }
            else
            {
                var final = new List<int>();
                var tl = new List<int>();
                tl.Add(0);
                //Console.WriteLine(l[0]);
                int k = 0;
                while (k < 3 && tl.Count() > 0)
                {
                    int ri = FindMaxIndex(tl, l);
                    //Console.WriteLine(l[ri] + "findMax" + ri);
                    int currentIndex = tl[ri];
                    final.Add(l[tl[ri]]);
                    tl.RemoveAt(ri);
                    if (2 * currentIndex + 1 < l.Count())
                    {
                        tl.Add((2 * currentIndex) + 1);
                        //Console.WriteLine(l[(2 * ri) + 1]);
                    }
                    if (2 * currentIndex + 2 < l.Count())
                    {
                        tl.Add((2 * currentIndex) + 2);
                        //Console.WriteLine(l[(2 * ri) + 2]);
                    }
                    k++;
                }

                r.Add(final[0] * final[1] * final[2]);

            }
        }

        return r;
    }
    
    public int FindMaxIndex(List<int> il, List<int> A)
    {
        //Console.WriteLine(A.Count());
        //Console.WriteLine(il.Count());
        int r = Int32.MinValue;
        int ri = 0;
        for (int i = 0; i < il.Count(); i++)
        {
            //Console.WriteLine(i + "-" + il[i] + "-" + A[il[i]]);
            if (A[il[i]] > r)
            {
                r = A[il[i]];
                ri = i;
            }
        }
        //Console.WriteLine(ri + "ind");
        return ri;
    }
}
