Invert the Binary Tree
Problem Description

Given a binary tree A, invert the binary tree and return it.

Inverting refers to making left child as the right child and vice versa.



Problem Constraints
1 <= size of tree <= 100000



Input Format
First and only argument is the head of the tree A.



Output Format
Return the head of the inverted tree.



Example Input
Input 1:

 
     1
   /   \
  2     3
Input 2:

 
     1
   /   \
  2     3
 / \   / \
4   5 6   7


Example Output
Output 1:

 
     1
   /   \
  3     2
Output 2:

 
     1
   /   \
  3     2
 / \   / \
7   6 5   4


Example Explanation
Explanation 1:

Tree has been inverted.
Explanation 2:

Tree has been inverted.


/**
 * Definition for binary tree
 * class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) {this.val = x; this.left = this.right = null;}
 * }
 */
class Solution {
    public TreeNode invertTree(TreeNode A) {
        return invert(A);
    }
    
    public TreeNode invert(TreeNode A)
    {
        if(A == null)
        {
            return null;
        }
        
        //Console.WriteLine(A.val);
        var tl = A.left;
        var tr = A.right;
        invert(A.left);
        invert(A.right);
        
        A.left = tr;
        A.right = tl;
        
        return A;
    }
}
