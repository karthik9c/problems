Sorted Array To Balanced BST
Problem Description

Given an array where elements are sorted in ascending order, convert it to a height Balanced Binary Search Tree (BBST).

Balanced tree : a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.



Problem Constraints
1 <= length of array <= 100000



Input Format
First argument is an integer array A.



Output Format
Return a root node of the Binary Search Tree.



Example Input
Input 1:

 A : [1, 2, 3]
Input 2:

 A : [1, 2, 3, 5, 10]


Example Output
Output 1:

      2
    /   \
   1     3
Output 2:

      3
    /   \
   2     5
  /       \
 1         10


Example Explanation
Explanation 1:

 You need to return the root node of the Binary Tree.


using System.Collections.Generic;
using System;
/**
 * Definition for binary tree
 * class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) {this.val = x; this.left = this.right = null;}
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(List<int> A) {
        return BuildBST(A, 0, A.Count-1);
    }
    
    public TreeNode BuildBST(List<int> A, int s, int e)
    {
        if(s>e || s < 0 || s > A.Count-1 || e<0 || e > A.Count-1)
        {
            return null;
        }
        int c = (e - s) + 1;
        int ind = s + (c / 2);
        var t = new TreeNode(A[ind]);
        
        t.left = BuildBST(A, s, ind -1);
        t.right = BuildBST(A, ind + 1, e);
        
        return t;
    }
}
