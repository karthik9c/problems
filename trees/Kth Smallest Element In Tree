Kth Smallest Element In Tree
Problem Description

Given a binary search tree represented by root A, write a function to find the Bth smallest element in the tree.



Problem Constraints
1 <= Number of nodes in binary tree <= 100000

0 <= node values <= 10^9



Input Format
First and only argument is head of the binary tree A.



Output Format
Return an integer, representing the Bth element.



Example Input
Input 1:

 
            2
          /   \
         1    3
B = 2
Input 2:

 
            3
           /
          2
         /
        1
B = 1



Example Output
Output 1:

 2
Output 2:

 1


Example Explanation
Explanation 1:

2nd element is 2.
Explanation 2:

1st element is 1.

/**
 * Definition for binary tree
 * class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) {this.val = x; this.left = this.right = null;}
 * }
 */
class Solution {
    public int kthsmallest(TreeNode A, int B) {
        int count =0;
        var t = InOrder(A, ref count, B);
        
        return t.val;
    }
    
    public TreeNode InOrder(TreeNode A, ref int count, int k)
    {
        if(A == null)
        {
            return null;
        }
        var left = InOrder(A.left, ref count, k);
        
        if(left != null)
        {
            return left;
        }
        count++;
        if(count == k)
        {
            return A;
        }
        return InOrder(A.right, ref count, k);
    }
}
